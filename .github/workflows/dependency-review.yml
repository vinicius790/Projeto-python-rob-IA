# Dependency Review Action
#
# This Action will scan dependency manifest files that change as part of a Pull Request,
# surfacing known-vulnerable versions of the packages declared or updated in the PR.
# Once installed, if the workflow run is marked as required, PRs introducing known-vulnerable
# packages will be blocked from merging.
#
# Source repository: https://github.com/actions/dependency-review-action
# Public documentation: https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review#dependency-review-enforcement

name: 'Dependency Review'

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  workflow_dispatch:

# If using a dependency submission action in this workflow, this permission will need to be set to:
#
# permissions:
#   contents: write
#
# https://docs.github.com/en/enterprise-cloud@latest/code-security/supply-chain-security/understanding-your-software-supply-chain/using-the-dependency-submission-api
permissions:
  contents: read
  pull-requests: write # Write permissions for pull-requests are required for using the `comment-summary-in-pr` option

jobs:
  dependency-review:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: always
          fail-on-severity: high
          deny-licenses: GPL-1.0-or-later, LGPL-2.0-or-later
          retry-on-snapshot-warnings: true

      - name: 'Run Security Scan'
        uses: google/oss-fuzz@v1
        with:
          project: ${{ github.repository }}
          severity: high

      - name: 'Upload Dependency Review Report'
        uses: actions/upload-artifact@v3
        with:
          name: dependency-review-report
          path: dependency-review-report.txt

      - name: 'Post Review Summary'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('dependency-review-report.txt', 'utf8');
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Dependency Review Report\n${report}`
            });

      - name: 'Clean up workspace'
        run: |
          echo "Cleaning up workspace..."
          rm -rf ./**
